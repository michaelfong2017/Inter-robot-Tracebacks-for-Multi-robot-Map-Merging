<launch>
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]" />
    <arg name="first_tb3" default="tb3_0" />
    <arg name="second_tb3" default="tb3_1" />
    <arg name="third_tb3" default="tb3_2" />

    <arg name="first_tb3_x_pos" default=" -7.0" />
    <arg name="first_tb3_y_pos" default=" -1.0" />
    <arg name="first_tb3_z_pos" default=" 0.0" />
    <arg name="first_tb3_yaw" default=" 0.0" />

    <arg name="second_tb3_x_pos" default=" 7.0" />
    <arg name="second_tb3_y_pos" default=" -1.0" />
    <arg name="second_tb3_z_pos" default=" 0.0" />
    <arg name="second_tb3_yaw" default=" 0.0" />

    <arg name="third_tb3_x_pos" default=" 0.5" />
    <arg name="third_tb3_y_pos" default=" 3.0" />
    <arg name="third_tb3_z_pos" default=" 0.0" />
    <arg name="third_tb3_yaw" default=" 0.785" />

    <arg name="neg_first_tb3_x_pos" default="$(eval -1 * first_tb3_x_pos)" />
    <arg name="neg_first_tb3_y_pos" default="$(eval -1 * first_tb3_y_pos)" />
    <arg name="neg_first_tb3_z_pos" default="$(eval -1 * first_tb3_z_pos)" />
    <arg name="neg_first_tb3_yaw" default="$(eval -1 * first_tb3_yaw)" />

    <arg name="neg_second_tb3_x_pos" default="$(eval -1 * second_tb3_x_pos)" />
    <arg name="neg_second_tb3_y_pos" default="$(eval -1 * second_tb3_y_pos)" />
    <arg name="neg_second_tb3_z_pos" default="$(eval -1 * second_tb3_z_pos)" />
    <arg name="neg_second_tb3_yaw" default="$(eval -1 * second_tb3_yaw)" />

    <arg name="neg_third_tb3_x_pos" default="$(eval -1 * third_tb3_x_pos)" />
    <arg name="neg_third_tb3_y_pos" default="$(eval -1 * third_tb3_y_pos)" />
    <arg name="neg_third_tb3_z_pos" default="$(eval -1 * third_tb3_z_pos)" />
    <arg name="neg_third_tb3_yaw" default="$(eval -1 * third_tb3_yaw)" />

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <!-- There are 4 worlds that are configured with <real_time_update_rate>0.0</real_time_update_rate> -->
        <!-- meaning that the simulation will run as fast as possible -->
        <!-- Please change the world here to the one in which you intend to run simulation -->
        <!-- 1. <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_house.world" /> -->
        <!-- 2. <arg name="world_name" value="$(find aws_robomaker_small_house_world)/worlds/small_house.world" /> -->
        <!-- 3. <arg name="world_name" value="$(find aws_robomaker_bookstore_world)/worlds/bookstore.world" /> -->
        <!-- 4. <arg name="world_name" value="$(find aws_robomaker_small_warehouse_world)/worlds/no_roof_small_warehouse.world" /> -->
        <arg name="world_name" value="$(find aws_robomaker_small_house_world)/worlds/small_house.world" />
        <arg name="paused" value="false" />
        <arg name="use_sim_time" value="true" />
        <arg name="gui" value="true" />
        <arg name="headless" value="false" />
        <arg name="debug" value="false" />
    </include>

    <group ns="$(arg first_tb3)">
        <param name="robot_description" command="$(find xacro)/xacro $(find traceback_bringup)/urdf/turtlebot3_$(arg model).urdf.xacro" />
        <param name="tf_prefix" value="$(arg first_tb3)" />

        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
            <param name="publish_frequency" type="double" value="50.0" />
        </node>

        <!-- <node pkg="tf" type="static_transform_publisher" name="fix_odom" args="0 0 0 0 0 0 $(arg first_tb3)/odom $(arg first_tb3)/base_footprint 50" /> -->

        <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg first_tb3) -x $(arg first_tb3_x_pos) -y $(arg first_tb3_y_pos) -z $(arg first_tb3_z_pos) -Y $(arg first_tb3_yaw) -param robot_description" />
        <!-- <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg first_tb3)_tf_broadcaster" args="$(arg first_tb3_x_pos) $(arg first_tb3_y_pos) $(arg first_tb3_z_pos) $(arg first_tb3_yaw) 0 0 /map /$(arg first_tb3)/map 50" /> -->
        <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg first_tb3)_tf_broadcaster" args="0 0 0 0 0 0 /map /$(arg first_tb3)/map 50" />

    
        <include file="$(find traceback_bringup)/launch/modified_gmapping.launch">
            <arg name="robot_name" value="$(arg first_tb3)" />
        </include>

        <include file="$(find traceback_bringup)/launch/modified_move_base.launch">
            <arg name="cmd_vel_topic" value="cmd_vel" />
            <arg name="robot_name" value="$(arg first_tb3)" />
        </include>


        <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg first_tb3)_$(arg first_tb3)_tf_broadcaster" args="0 0 0 0 0 0 /map /$(arg first_tb3)/$(arg first_tb3)/map 50" />
    
    
        <node pkg="tf" type="static_transform_publisher" name="$(arg first_tb3)_fake_odom_to_odom_tf_broadcaster" args="$(arg neg_first_tb3_x_pos) $(arg neg_first_tb3_y_pos) $(arg neg_first_tb3_z_pos) $(arg neg_first_tb3_yaw) 0 0 /$(arg first_tb3)/fake_odom /$(arg first_tb3)/odom 50" />
    </group>

    <group ns="$(arg second_tb3)">
        <param name="robot_description" command="$(find xacro)/xacro $(find traceback_bringup)/urdf/turtlebot3_$(arg model).urdf.xacro" />
        <param name="tf_prefix" value="$(arg second_tb3)" />

        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
            <param name="publish_frequency" type="double" value="50.0" />
        </node>

        <!-- <node pkg="tf" type="static_transform_publisher" name="fix_odom" args="0 0 0 0 0 0 $(arg second_tb3)/odom $(arg second_tb3)/base_footprint 50" /> -->

        <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg second_tb3) -x $(arg second_tb3_x_pos) -y $(arg second_tb3_y_pos) -z $(arg second_tb3_z_pos) -Y $(arg second_tb3_yaw) -param robot_description" />
        <!-- <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg second_tb3)_tf_broadcaster" args="$(arg second_tb3_x_pos) $(arg second_tb3_y_pos) $(arg second_tb3_z_pos) $(arg second_tb3_yaw) 0 0 /map /$(arg second_tb3)/map 50" /> -->
        <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg second_tb3)_tf_broadcaster" args="0 0 0 0 0 0 /map /$(arg second_tb3)/map 50" />

    
        <include file="$(find traceback_bringup)/launch/modified_gmapping.launch">
            <arg name="robot_name" value="$(arg second_tb3)" />
        </include>

        <include file="$(find traceback_bringup)/launch/modified_move_base.launch">
            <arg name="cmd_vel_topic" value="cmd_vel" />
            <arg name="robot_name" value="$(arg second_tb3)" />
        </include>

        <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg second_tb3)_$(arg second_tb3)_tf_broadcaster" args="0 0 0 0 0 0 /map /$(arg second_tb3)/$(arg second_tb3)/map 50" />
    
    
        <node pkg="tf" type="static_transform_publisher" name="$(arg second_tb3)_fake_odom_to_odom_tf_broadcaster" args="$(arg neg_second_tb3_x_pos) $(arg neg_second_tb3_y_pos) $(arg neg_second_tb3_z_pos) $(arg neg_second_tb3_yaw) 0 0 /$(arg second_tb3)/fake_odom /$(arg second_tb3)/odom 50" />
    </group>

    <group ns="$(arg third_tb3)">
        <param name="robot_description" command="$(find xacro)/xacro $(find traceback_bringup)/urdf/turtlebot3_$(arg model).urdf.xacro" />
        <param name="tf_prefix" value="$(arg third_tb3)" />

        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
            <param name="publish_frequency" type="double" value="50.0" />
        </node>

        <!-- <node pkg="tf" type="static_transform_publisher" name="fix_odom" args="0 0 0 0 0 0 $(arg third_tb3)/odom $(arg third_tb3)/base_footprint 50" /> -->

        <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg third_tb3) -x $(arg third_tb3_x_pos) -y $(arg third_tb3_y_pos) -z $(arg third_tb3_z_pos) -Y $(arg third_tb3_yaw) -param robot_description" />
        <!-- <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg third_tb3)_tf_broadcaster" args="$(arg third_tb3_x_pos) $(arg third_tb3_y_pos) $(arg third_tb3_z_pos) $(arg third_tb3_yaw) 0 0 /map /$(arg third_tb3)/map 50" /> -->
        <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg third_tb3)_tf_broadcaster" args="0 0 0 0 0 0 /map /$(arg third_tb3)/map 50" />

        
        <include file="$(find traceback_bringup)/launch/modified_gmapping.launch">
            <arg name="robot_name" value="$(arg third_tb3)" />
        </include>

        <include file="$(find traceback_bringup)/launch/modified_move_base.launch">
            <arg name="cmd_vel_topic" value="cmd_vel" />
            <arg name="robot_name" value="$(arg third_tb3)" />
        </include>

        <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg third_tb3)_$(arg third_tb3)_tf_broadcaster" args="0 0 0 0 0 0 /map /$(arg third_tb3)/$(arg third_tb3)/map 50" />
    
    
        <node pkg="tf" type="static_transform_publisher" name="$(arg third_tb3)_fake_odom_to_odom_tf_broadcaster" args="$(arg neg_third_tb3_x_pos) $(arg neg_third_tb3_y_pos) $(arg neg_third_tb3_z_pos) $(arg neg_third_tb3_yaw) 0 0 /$(arg third_tb3)/fake_odom /$(arg third_tb3)/odom 50" />
    </group>

    <node pkg="rviz" type="rviz" name="rviz"
    args="-d $(find traceback_bringup)/rviz/view_maps.rviz" />

</launch>